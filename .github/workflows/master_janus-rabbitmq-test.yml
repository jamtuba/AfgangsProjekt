# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy dotnet core app to Azure Function App - janus-rabbitmq-test

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '6.0.x' # set this to the dotnet version to use

jobs:
  build:
    name: Build ‚õèÔ∏è
    
    runs-on: ubuntu-latest
    
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd
          
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          retention-days: 5
  
  deploy:
    name: Deploy üöÄ
    
    runs-on: ubuntu-latest
    
    needs: build
    
    steps:
    
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app   
    
      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'janus-rabbitmq-test'
          slot-name: 'Production'
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_AFF752B810F04DFB81C6318149FB9344 }}
        env:
          alphavantage: ${{ secrets.ALPHAVANTAGE }}
          cloudamqpconnectionstring: ${{ secrets.CLOUDAMQPCONNECTIONSTRING }}         
